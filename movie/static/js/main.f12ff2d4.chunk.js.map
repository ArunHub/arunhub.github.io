{"version":3,"sources":["Card.jsx","movie.service.js","Entertainment.jsx","Favorites.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","data","isFavourite","useState","checked","setChecked","history","useHistory","className","htmlFor","id","type","onChange","eve","value","target","getLocal","JSON","parse","localStorage","getItem","setItem","stringify","Title","onClick","push","imdbID","src","Poster","alt","Year","Type","getUrl","params","URL","obj","str","p","hasOwnProperty","encodeURIComponent","join","serialize","Entertainment","list","setList","searchValue","setSearchValue","selectValue","setSelectValue","setError","imdbId","useParams","handleImgClick","val","placeholder","url","fetch","then","response","json","MovieService","s","Response","Error","Search","catch","err","path","children","find","t","exact","render","length","map","i","Favorites","Object","values","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f12ff2d4.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Card(props) {\r\n    const { data, isFavourite } = props;\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const handleChange = (eve) => {\r\n        const value = eve.target.checked;\r\n        setChecked(value)\r\n        if (value) {\r\n            const getLocal = JSON.parse(localStorage.getItem(\"favorites\"));\r\n            if (getLocal !== null) {\r\n                localStorage.setItem(\"favorites\", JSON.stringify({ ...getLocal, [data.Title]: data }));\r\n            } else {\r\n                localStorage.setItem(\"favorites\", JSON.stringify({ [data.Title]: data }));\r\n            }\r\n        }\r\n        else {\r\n            const getLocal = JSON.parse(localStorage.getItem(\"favorites\"));\r\n            getLocal && delete getLocal[data.Title];\r\n\r\n        }\r\n\r\n    }\r\n    let history = useHistory();\r\n\r\n    const handleImageClick = () => {\r\n        history.push(`/${data.imdbID}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie-card\">\r\n            {isFavourite ? (\r\n                <div className=\"favorites\">\r\n                    <label htmlFor=\"fav\">Favourites</label>\r\n                    <input id=\"fav\" type=\"checkbox\" checked={checked} onChange={handleChange} />\r\n                </div>\r\n            ) : null}\r\n            {isFavourite ? (\r\n                <img onClick={handleImageClick} src={data.Poster} alt={data.Title} />\r\n            ) :\r\n                <img src={data.Poster} alt={data.Title} />\r\n            }\r\n            <div>Movie title: {data.Title}</div>\r\n            <div>Release Date: {data.Year}</div>\r\n            <div>Type: {data.Type}</div>\r\n        </div>\r\n    )\r\n}","export const MovieService = (url) => {\r\n    return fetch(url)\r\n        .then(response => response.json())\r\n}\r\n\r\nexport const getUrl = (params) => {\r\n    let URL = \"http://www.omdbapi.com/?apikey=992b2990&\";\r\n    URL = URL + serialize(params);\r\n\r\n    return URL;\r\n}\r\n\r\nfunction serialize(obj) {\r\n    var str = [];\r\n    for (var p in obj)\r\n        if (obj.hasOwnProperty(p)) {\r\n            str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n        }\r\n    return str.join(\"&\");\r\n}","import { useState } from 'react';\r\nimport { Route, Switch, useHistory, useParams } from 'react-router-dom';\r\nimport Card from './Card';\r\nimport { getUrl, MovieService } from './movie.service';\r\n\r\nexport default function Entertainment(props) {\r\n    let history = useHistory();\r\n\r\n    const [list, setList] = useState([]);\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [selectValue, setSelectValue] = useState(\"all\");\r\n    const [error, setError] = useState(\"\");\r\n    let { imdbId } = useParams();\r\n\r\n    const handleClick = () => {\r\n        const url = getUrl({\r\n            s: searchValue,\r\n            ...(selectValue !== \"all\") ? { type: selectValue } : {}\r\n        });\r\n        MovieService(url).then(json => {\r\n            if (json.Response === \"False\") {\r\n                throw new Error(json.Error);\r\n            } else {\r\n                setList(json.Search);\r\n                history.push(`/list`);\r\n            }\r\n\r\n        }\r\n        ).catch(err => {\r\n            setError(err['message'])\r\n        });\r\n    }\r\n\r\n    const handleSearch = (eve) => {\r\n        const value = eve.target.value;\r\n        setSearchValue(value)\r\n    }\r\n\r\n    const handleSelect = (eve) => {\r\n        const value = eve.target.value;\r\n        setSelectValue(value)\r\n    }\r\n\r\n    const handleImgClick = (val) => {\r\n        props.handleImgClick(val)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"search\">\r\n                <input type=\"search\" onChange={handleSearch} placeholder=\"Search here\" value={searchValue} />\r\n                <select value={selectValue} onChange={handleSelect}>\r\n                    <option value=\"all\">all</option>\r\n                    <option value=\"movie\">movies</option>\r\n                    <option value=\"series\">series</option>\r\n                    <option value=\"episode\">episode</option>\r\n                </select>\r\n                <button onClick={handleClick}>Search</button>\r\n            </div>\r\n            <Switch>\r\n                \r\n                <Route path=\"/:imdbId\" children={() => {\r\n                    const data = list.find(t => t.imdbId === imdbId)\r\n                    return (\r\n                        <div>\r\n                            <Card data={data} />\r\n                        </div>\r\n                    )\r\n\r\n                }}\r\n                >\r\n                </Route>\r\n                <Route exact path=\"/list\" render={() => {\r\n                    < section className=\"listing\">\r\n                        {(list.length) ?\r\n                            (\r\n                                list.map((t, i) => (\r\n                                    <Card data={t} key={i} isFavourite handleImgClick={handleImgClick} />\r\n                                )\r\n                                )\r\n                            ) :\r\n                            error ? error : \"No results found\"\r\n                        }\r\n                    </section>\r\n                }} />\r\n                <Route path=\"/\" children={() => (\r\n                    <div>\r\n                        <h3>\r\n                            No results found\r\n                        </h3>\r\n                    </div>\r\n                )}\r\n                >\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","export default function Favorites(props) {\r\n    const getLocal = JSON.parse(localStorage.getItem(\"favorites\"));\r\n\r\n    return (\r\n        <section className=\"favorite-list\">\r\n            {\r\n                (getLocal !== null) ?\r\n                    Object.values(getLocal).map((t, i) => (\r\n                        <div className=\"movie-card\" key={i}>\r\n                            <img src={t.Poster} alt={t.Title} />\r\n                            <div>Movie title: {t.Title}</div>\r\n                            <div>Release Date: {t.Year}</div>\r\n                            <div>Type: {t.Type}</div>\r\n                        </div>\r\n                    )) : \"No Favorites\"\r\n\r\n            }\r\n        </section>\r\n    )\r\n}","import './App.css';\nimport Entertainment from './Entertainment';\nimport Favorites from './Favorites';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"navbar\">\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/favorites\">Favorites</Link></li>\n          </ul>\n        </div>\n        <main>\n          <Switch>\n            <Route exact path=\"/favorites\">\n              <Favorites></Favorites>\n            </Route>\n            <Route path=\"/\">\n              <Entertainment ></Entertainment>\n            </Route>\n          </Switch>\n        </main>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}